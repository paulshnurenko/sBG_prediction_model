{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "# üìå Step 1: –Ü–º–ø–æ—Ä—Ç–∏\n",
        "import numpy as np\n",
        "from scipy.optimize import minimize\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n",
        "import gspread\n",
        "from google.colab import auth\n",
        "from google.auth import default\n",
        "import re\n"
      ],
      "metadata": {
        "id": "O2xXN6B_2x4I"
      },
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# üìå Step 1.5: –û—Ç—Ä–∏–º–∞–Ω–Ω—è retention —ñ–∑ Google Sheets\n",
        "\n",
        "# --- –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n",
        "sheet_url = 'https://docs.google.com/spreadsheets/d/1eZftkBNg8gFPzyo-WWBDsZNniXe-IkM3THpT4yqUCmI/edit?gid=624135906#gid=624135906'\n",
        "worksheet_name = 'Revenue cohort'\n",
        "cell_range = 'C46:G46'\n",
        "\n",
        "auth.authenticate_user()\n",
        "creds, _ = default()\n",
        "gc = gspread.authorize(creds)\n",
        "\n",
        "# –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ Google Sheet —ñ –ª–∏—Å—Ç\n",
        "spreadsheet = gc.open_by_url(sheet_url)\n",
        "worksheet = spreadsheet.worksheet(worksheet_name)\n",
        "\n",
        "# –í–∏—Ç—è–≥—É—î–º–æ –¥–∞–Ω—ñ —ñ–∑ –∑–∞–¥–∞–Ω–æ–≥–æ —Ä–µ–Ω–¥–∂—É\n",
        "cells = worksheet.get(cell_range)\n",
        "if len(cells) > 0 and isinstance(cells[0], list):\n",
        "    cells = cells[0]  # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∏–π —Ä—è–¥–æ–∫\n",
        "else:\n",
        "    cells = list(cells)\n",
        "\n",
        "print(\"–ó—á–∏—Ç–∞–Ω–æ —Ç–∞–∫—ñ –∑–Ω–∞—á–µ–Ω–Ω—è (—è–∫ —î):\", cells)\n",
        "\n",
        "def parse_float(val):\n",
        "    s = str(val).strip().replace(\"$\", \"\").replace(\"%\", \"\")\n",
        "    # –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ –∫–æ–º–∏ (—Ç—ñ–ª—å–∫–∏ —è–∫ —Ç–∏—Å—è—á–Ω—ñ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫–∏)\n",
        "    s = s.replace(\",\", \"\")\n",
        "    # –Ø–∫—â–æ –ª–∏—à–∏–ª–∞—Å—å –∫—Ä–∞–ø–∫–∞ - –¥–µ—Å—è—Ç–∫–æ–≤–∏–π —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫\n",
        "    try:\n",
        "        return float(s)\n",
        "    except:\n",
        "        return None\n",
        "\n",
        "values = [parse_float(v) for v in cells if str(v).strip() != \"\"]\n",
        "values = [v for v in values if v is not None]\n",
        "\n",
        "if len(values) == 0:\n",
        "    raise ValueError(\"–í —Ä–µ–Ω–¥–∂—ñ –Ω–µ–º–∞—î —á–∏—Å–ª–æ–≤–∏—Ö –∑–Ω–∞—á–µ–Ω—å. –ü–µ—Ä–µ–≤—ñ—Ä —Ñ–æ—Ä–º–∞—Ç!\")\n",
        "\n",
        "# –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ç–∏–ø –¥–∞–Ω–∏—Ö\n",
        "has_percent = any(\"%\" in str(val) for val in cells)\n",
        "has_fraction = all(0 <= v <= 1 for v in values)\n",
        "\n",
        "# –û–±—Ä–æ–±–∫–∞ –∑–≥—ñ–¥–Ω–æ —Ç–≤–æ—î—ó –ª–æ–≥—ñ–∫–∏:\n",
        "if has_percent:\n",
        "    # –í—Å—ñ –≤–∂–µ —Å—Ç–∞–ª–∏ —á–∞—Å—Ç–∫–∞–º–∏\n",
        "    pass\n",
        "elif has_fraction:\n",
        "    # –ó–Ω–∞—á–µ–Ω–Ω—è –≤–∂–µ —á–∞—Å—Ç–∫–∏ ‚Äî –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏–º–æ\n",
        "    pass\n",
        "else:\n",
        "    # –ê–±—Å–æ–ª—é—Ç–Ω—ñ —á–∏—Å–ª–∞ (–≤ —Ç.—á. –≤–∞–ª—é—Ç–∞) ‚Äî –≤—Å—ñ –¥—ñ–ª–∏–º–æ –Ω–∞ –ø–µ—Ä—à–µ —á–∏—Å–ª–æ (–≤–∫–ª—é—á–Ω–æ –∑ –ø–µ—Ä—à–∏–º!)\n",
        "    base = values[0]\n",
        "    values = [v / base for v in values]\n",
        "\n",
        "print(\"Observed retention (–º–∞—Å–∏–≤ –¥–ª—è –º–æ–¥–µ–ª—ñ):\", [round(x, 4) for x in values])\n",
        "observed_retention = values\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kyuGoKr7ng4h",
        "outputId": "a0df596a-f955-42c9-a433-c212828b0a21"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "–ó—á–∏—Ç–∞–Ω–æ —Ç–∞–∫—ñ –∑–Ω–∞—á–µ–Ω–Ω—è (—è–∫ —î): ['$3,436.90', '$828.01', '$571.10', '$497.61', '$551.47']\n",
            "Observed retention (–º–∞—Å–∏–≤ –¥–ª—è –º–æ–¥–µ–ª—ñ): [1.0, 0.2409, 0.1662, 0.1448, 0.1605]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# üìå Step 2: –í–≤–µ–¥–∏ —Å–≤—ñ–π —Å–ø–∏—Å–æ–∫ —Ä—ñ—Ç–µ–Ω—à–µ–Ω—É (–¥–æ 53 —Ç–∏–∂–Ω—ñ–≤ –∞–±–æ –º–µ–Ω—à–µ)\n",
        "observed_retention = [\n",
        "    3436.90, 828.01, 571.10, 497.61, 551.47\n",
        "]\n"
      ],
      "metadata": {
        "id": "TnatP5ls46mU"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# üìå Step 3: sBG-—Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑—É —Ä–µ—Ç–µ–Ω—à–Ω—É\n",
        "def sbg_retention(alpha, beta, periods):\n",
        "    retention = [1.0]\n",
        "    for t in range(1, periods):\n",
        "        p = beta / (alpha + beta + t - 1)\n",
        "        retention.append(retention[-1] * (1 - p))\n",
        "    return retention\n",
        "\n",
        "# üìå Step 4: Loss function (RMSE)\n",
        "def loss(params):\n",
        "    alpha, beta = params\n",
        "    predicted = sbg_retention(alpha, beta, len(observed_retention))\n",
        "    weights = np.ones_like(observed_retention)\n",
        "    weights[:4] = 3  # –ü–µ—Ä—à—ñ —Ç–∏–∂–Ω—ñ ‚Äî –≤—Ç—Ä–∏—á—ñ –≤–∞–∂–ª–∏–≤—ñ—à—ñ\n",
        "    return np.sqrt(np.average((np.array(predicted) - np.array(observed_retention))**2, weights=weights))\n",
        "\n",
        "\n",
        "# üìå Step 5: –ü–æ—à—É–∫ –Ω–∞–π–∫—Ä–∞—â–∏—Ö alpha —ñ beta\n",
        "res = minimize(\n",
        "    loss,\n",
        "    x0=[1.0, 1.0],\n",
        "    bounds=[(0.0000000001, 1000), (0.0000010000, 1000)],\n",
        "    method='Powell',\n",
        "    options={'xtol': 1e-8, 'ftol': 1e-10, 'disp': True}\n",
        ")\n",
        "alpha_opt, beta_opt = res.x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wBtyUK6d48ql",
        "outputId": "3f3bc942-990d-43f3-d66b-86a8f65584c1"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Optimization terminated successfully.\n",
            "         Current function value: 0.009511\n",
            "         Iterations: 7\n",
            "         Function evaluations: 546\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# üìå Step 6: –ì–µ–Ω–µ—Ä—É—î–º–æ –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 53 —Ç–∏–∂–Ω—ñ (–∑ Week 0 –¥–æ Week 52)\n",
        "predicted_full = sbg_retention(alpha_opt, beta_opt, 53)  # 53 –∑–Ω–∞—á–µ–Ω–Ω—è: 0...52 —Ç–∏–∂–¥–µ–Ω—å\n",
        "\n",
        "# üìå Step 7: –ú–µ—Ç—Ä–∏–∫–∏ —Ç–æ—á–Ω–æ—Å—Ç—ñ (–ø–æ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂—É–≤–∞–Ω–æ–º—É –ø–µ—Ä—ñ–æ–¥—É)\n",
        "predicted_fit = sbg_retention(alpha_opt, beta_opt, len(observed_retention))\n",
        "rmse = np.sqrt(mean_squared_error(observed_retention, predicted_fit))\n",
        "mae = mean_absolute_error(observed_retention, predicted_fit)\n",
        "r2 = r2_score(observed_retention, predicted_fit)\n",
        "\n",
        "print(f\"\\nüîé –û–ø—Ç–∏–º–∞–ª—å–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\")\n",
        "print(f\"Alpha: {alpha_opt:.4f}\")\n",
        "print(f\"Beta:  {beta_opt:.4f}\")\n",
        "print(f\"\\nüìä RMSE: {rmse:.5f}\")\n",
        "print(f\"üìä MAE:  {mae:.5f}\")\n",
        "print(f\"üìä R¬≤:   {r2:.5f}\\n\")\n",
        "\n",
        "# üìå Step 8: –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è\n",
        "plt.figure(figsize=(10, 5))\n",
        "plt.plot(range(0, len(observed_retention)), observed_retention, 'o-', label='Observed')\n",
        "plt.plot(range(0, 53), predicted_full, '--', label='Predicted (sBG)')\n",
        "plt.xlabel(\"Week\")\n",
        "plt.ylabel(\"Retention\")\n",
        "plt.legend()\n",
        "plt.title(\"sBG Retention Prediction up to Week 52\")\n",
        "plt.grid(True)\n",
        "plt.show()\n",
        "\n",
        "# üìå Step 9: –í–∏–≤—ñ–¥ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å\n",
        "print(\"–°–ø–∏—Å–æ–∫ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å sBG retention (–¥–æ 52 —Ç–∏–∂–Ω—ñ–≤):\")\n",
        "for i, r in enumerate(predicted_full):\n",
        "    print(f\"Week {i}: {round(r, 4)}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "uhEpPlwz5JiT",
        "outputId": "f05ca2f6-6628-49b6-a446-21309b07e38e"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "üîé –û–ø—Ç–∏–º–∞–ª—å–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:\n",
            "Alpha: 0.1201\n",
            "Beta:  0.3875\n",
            "\n",
            "üìä RMSE: 0.01360\n",
            "üìä MAE:  0.00921\n",
            "üìä R¬≤:   0.99831\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "–°–ø–∏—Å–æ–∫ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å sBG retention (–¥–æ 52 —Ç–∏–∂–Ω—ñ–≤):\n",
            "Week 0: 1.0\n",
            "Week 1: 0.2366\n",
            "Week 2: 0.1758\n",
            "Week 3: 0.1486\n",
            "Week 4: 0.1322\n",
            "Week 5: 0.1208\n",
            "Week 6: 0.1123\n",
            "Week 7: 0.1056\n",
            "Week 8: 0.1002\n",
            "Week 9: 0.0956\n",
            "Week 10: 0.0917\n",
            "Week 11: 0.0883\n",
            "Week 12: 0.0854\n",
            "Week 13: 0.0827\n",
            "Week 14: 0.0803\n",
            "Week 15: 0.0782\n",
            "Week 16: 0.0762\n",
            "Week 17: 0.0745\n",
            "Week 18: 0.0728\n",
            "Week 19: 0.0713\n",
            "Week 20: 0.0699\n",
            "Week 21: 0.0685\n",
            "Week 22: 0.0673\n",
            "Week 23: 0.0662\n",
            "Week 24: 0.0651\n",
            "Week 25: 0.064\n",
            "Week 26: 0.0631\n",
            "Week 27: 0.0621\n",
            "Week 28: 0.0613\n",
            "Week 29: 0.0604\n",
            "Week 30: 0.0596\n",
            "Week 31: 0.0589\n",
            "Week 32: 0.0582\n",
            "Week 33: 0.0575\n",
            "Week 34: 0.0568\n",
            "Week 35: 0.0562\n",
            "Week 36: 0.0555\n",
            "Week 37: 0.055\n",
            "Week 38: 0.0544\n",
            "Week 39: 0.0538\n",
            "Week 40: 0.0533\n",
            "Week 41: 0.0528\n",
            "Week 42: 0.0523\n",
            "Week 43: 0.0518\n",
            "Week 44: 0.0514\n",
            "Week 45: 0.0509\n",
            "Week 46: 0.0505\n",
            "Week 47: 0.0501\n",
            "Week 48: 0.0497\n",
            "Week 49: 0.0493\n",
            "Week 50: 0.0489\n",
            "Week 51: 0.0485\n",
            "Week 52: 0.0481\n"
          ]
        }
      ]
    }
  ]
}